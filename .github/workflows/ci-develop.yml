name: Production Deployment
on:
  release:
    types: [published]

env:
  GIT_HEAD_BRANCH: ${{ github.head_ref }}
  GIT_BASE_BRANCH: ${{ github.base_ref }}
  GIT_PR_URL: https://github.com/constROD/template-react-typescript/pull/${{ github.event.pull_request.number }}
  PREVIEW_URL: https://${{ github.base_ref }}__${{ github.head_ref }}.surge.sh

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification (Deploying)
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            { "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":large_orange_circle: `base: ${{ env.GIT_BASE_BRANCH }}` <- `head: ${{ env.GIT_HEAD_BRANCH }}` is now deploying to `develop`."
                  }
                },
                { "type": "divider" },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Pull Request"
                      },
                      "url": "${{ env.GIT_PR_URL }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - uses: actions/checkout@v2

      - name: Setup Node Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.0

      - name: Setup Environment Variables
        run: |
          echo '//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}' >> .npmrc
          echo 'always-auth=true' >> .npmrc
          echo ${{ secrets.ENV_DEVELOP }} | base64 --decode > .env

      - name: Run ESLint
        run: |
          yarn
          yarn lint

      - name: Slack Notification (Lint-Error)
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            { "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":red_circle: `base: ${{ env.GIT_BASE_BRANCH }}` <- `head: ${{ env.GIT_HEAD_BRANCH }}` encountered an error while linting."
                  }
                },
                { "type": "divider" },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Pull Request"
                      },
                      "url": "${{ env.GIT_PR_URL }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        if: ${{ failure() || cancelled() }}

  # test:
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Setup Node Version
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16.13.0

  #     - name: Setup Environment Variables
  #       run: |
  #         echo '//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}' >> .npmrc
  #         echo 'always-auth=true' >> .npmrc
  #         echo ${{ secrets.ENV_DEVELOP }} | base64 --decode > .env

  #     - name: Run Test
  #       run: |
  #         yarn
  #         yarn test

  #     - name: Slack Notification (Test-Error)
  #       uses: slackapi/slack-github-action@v1.16.0
  #       with:
  #         payload: |
  #           { "blocks": [
  #               {
  #                 "type": "section",
  #                 "text": {
  #                   "type": "mrkdwn",
  #                   "text": ":red_circle: `base: ${{ env.GIT_BASE_BRANCH }}` <- `head: ${{ env.GIT_HEAD_BRANCH }}` encountered an error while testing."
  #                 }
  #               },
  #               { "type": "divider" },
  #               {
  #                 "type": "actions",
  #                 "elements": [
  #                   {
  #                     "type": "button",
  #                     "text": {
  #                       "type": "plain_text",
  #                       "text": "Pull Request"
  #                     },
  #                     "url": "${{ env.GIT_PR_URL }}"
  #                   }
  #                 ]
  #               }
  #             ]
  #           }
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #         SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  #       if: ${{ failure() || cancelled() }}

  # build:

  # deploy:
