name: Develop Deployment
on:
  push:
    branches:
      - develop

jobs:
  # notification-in-progress:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploying notification in Slack
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: custom
  #         custom_payload: |
  #           {
  #             text: '(Develop): `${{ github.head_ref }}` is now deploying.'
  #           }
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup Node Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.0

      - name: Run ESLint
        run: |
          yarn install --immutable --immutable-cache
          yarn lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop

      - name: Setup Node Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.0
      - run: |
          echo SKIP_PREFLIGHT_CHECK=true >> .env
          yarn
          yarn test

  # build:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: develop

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Login to Amazon ECR
  #       uses: aws-actions/amazon-ecr-login@v1
  #       id: login-ecr

  #     - name: Build and Push Image to Amazon ECR
  #       id: build-image
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         ECR_REPOSITORY: template-react-typescript
  #         ECR_IMAGE_TAG: develop
  #       run: |
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG .
  #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG

  deploy:

  # notification-done:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - name: Deployed notification in Slack
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: custom
  #         custom_payload: |
  #           {
  #             text: '(Develop): `${{ github.head_ref }}` is now deployed.'
  #           }
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
