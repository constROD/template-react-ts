name: Production Deployment
on:
  release:
    types: [published]

env:
  GIT_HEAD_BRANCH: ${{ github.head_ref }}
  GIT_BASE_BRANCH: ${{ github.base_ref }}
  GIT_PR_URL: https://github.com/constROD/template-react-typescript/pull/${{ github.event.pull_request.number }}
  PREVIEW_URL: https://${{ github.base_ref }}__${{ github.head_ref }}.surge.sh

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification (Deploying)
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            { "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":large_orange_circle: `base: ${{ env.GIT_BASE_BRANCH }}` <- `head: ${{ env.GIT_HEAD_BRANCH }}` is now deploying to `production`."
                  }
                },
                { "type": "divider" },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Pull Request"
                      },
                      "url": "${{ env.GIT_PR_URL }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - uses: actions/checkout@v1

      - name: Setup Node Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.0

      - name: Run ESLint
        run: |
          yarn install --immutable --immutable-cache
          yarn lint

      - name: Slack Notification (Lint-Error)
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            { "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":red_circle: `base: ${{ env.GIT_BASE_BRANCH }}` <- `head: ${{ env.GIT_HEAD_BRANCH }}` encountered an error while linting."
                  }
                },
                { "type": "divider" },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Pull Request"
                      },
                      "url": "${{ env.GIT_PR_URL }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        if: ${{ failure() || cancelled() }}

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop

      - name: Setup Node Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.0
      - run: |
          echo SKIP_PREFLIGHT_CHECK=true >> .env
          yarn
          yarn test

      - name: Slack Notification (Test-Error)
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            { "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":red_circle: `base: ${{ env.GIT_BASE_BRANCH }}` <- `head: ${{ env.GIT_HEAD_BRANCH }}` encountered an error while testing."
                  }
                },
                { "type": "divider" },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Pull Request"
                      },
                      "url": "${{ env.GIT_PR_URL }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        if: ${{ failure() || cancelled() }}

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: Build and Push Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: template-react-typescript
          ECR_IMAGE_TAG: production
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG

      - name: Slack Notification (Building-Error)
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            { "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":red_circle: `base: ${{ env.GIT_BASE_BRANCH }}` <- `head: ${{ env.GIT_HEAD_BRANCH }}` encountered an error while building."
                  }
                },
                { "type": "divider" },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Pull Request"
                      },
                      "url": "${{ env.GIT_PR_URL }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        if: ${{ failure() || cancelled() }}

  deploy:
